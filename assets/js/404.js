function lowpass(t){return function(e,n){return e*(1-t)+n*t}}function update_position(t){var e=canvas.getBoundingClientRect(),n={x:input_lowpass(state.light_focus.x,t.clientX-e.left),y:input_lowpass(state.light_focus.y,t.clientY-e.top)};state=Object.assign({},state,{light_focus:n,has_moved:!0}),null!==previous_timeout&&clearTimeout(previous_timeout),previous_timeout=setTimeout(function(){state=Object.assign({},state,{has_moved:!1}),previous_timeout=null},TIMEOUT_LENGTH)}function on_resize(){for(var t=window.innerWidth,e=window.innerHeight,n=[],o=50;o<t/2;o+=500)n.push({x:o,y:0}),n.push({x:o,y:e,flipped:!0}),n.push({x:t-o,y:0}),n.push({x:t-o,y:e,flipped:!0});state=Object.assign({},state,{lights:n})}function update_state(t){var e=window.innerWidth/2,n=window.innerHeight/2,o=t.light_focus.x,i=t.light_focus.y,a=t.has_moved,s={x:a?o:center_lowpass(o,e),y:a?i:center_lowpass(i,n)};return Object.assign({},t,{light_focus:s})}function render_beam(t,e){var n=t.x,o=t.y;o+=BASE_OFFSET*(t.flipped?-2:2);var i=e.x-n,a=e.y-o,s=Math.atan2(a,i),c=Math.sqrt(canvas.width*canvas.width+canvas.height*canvas.height);context.save(),context.translate(n,o),context.rotate(s-Math.PI/2),context.globalAlpha=.1,context.fillStyle="rgba(255, 255, 255, 0.1)",context.beginPath();var l=-LIGHT_WIDTH/2+LENS_BEZEL_WIDTH,_=l-c*Math.sin(BEAM_ANGLE*DEGREES_TO_RADS);context.moveTo(l,LIGHT_HEIGHT-BASE_OFFSET),context.lineTo(_,c),context.lineTo(-_,c),context.lineTo(-l,LIGHT_HEIGHT-BASE_OFFSET),context.closePath(),context.save(),context.globalCompositeOperation="destination-out",context.fillStyle="rgb(255, 255, 255, 0.9)",context.fill(),context.restore(),context.fillStyle="rgb(255, 255, 255, 0.9)",context.fill(),context.restore()}function render_light(t,e){var n=t.x,o=t.y;o+=BASE_OFFSET*(t.flipped?-2:2);var i=e.x-n,a=e.y-o,s=Math.atan2(a,i);context.save(),context.translate(n,o),context.rotate(s-Math.PI/2),context.fillStyle=BARREL_COLOR,context.fillRect(-LIGHT_WIDTH/2,-BASE_OFFSET,LIGHT_WIDTH,LIGHT_HEIGHT),context.restore(),context.fillStyle=BASE_COLOR,context.fillRect(n-LIGHT_WIDTH/4,o,LIGHT_WIDTH/2,t.flipped?3*BASE_OFFSET:-1*BASE_OFFSET*3),context.beginPath(),context.arc(n,o,LIGHT_WIDTH/4,0,2*Math.PI,!1),context.fill()}function render(t){var e=window.innerWidth,n=window.innerHeight;canvas.width=e,canvas.height=n,context.fillStyle="rgba(0, 0, 0, 0.5)",context.fillRect(0,0,e,n),t.lights.forEach(function(e){render_beam(e,t.light_focus)}),t.lights.forEach(function(e){render_light(e,t.light_focus)})}function update(){render(state=update_state(state)),window.requestAnimationFrame(update)}var canvas=document.getElementById("canvas"),context=canvas.getContext("2d"),INPUT_LOWPASS_CONST=1,input_lowpass=lowpass(INPUT_LOWPASS_CONST),CENTER_LOWPASS_CONST=.01,center_lowpass=lowpass(CENTER_LOWPASS_CONST),TIMEOUT_LENGTH=1e3,LIGHT_HEIGHT=70,LIGHT_WIDTH=40,BASE_OFFSET=LIGHT_HEIGHT/8,BEAM_ANGLE=12,LENS_BEZEL_WIDTH=10,DEGREES_TO_RADS=Math.PI/180,BARREL_COLOR="white",BASE_COLOR="#252525",state={has_moved:!1,light_focus:{x:window.innerWidth/2,y:window.innerHeight/2},lights:[]},previous_timeout=null;canvas.addEventListener("mousemove",update_position,!1),window.addEventListener("resize",on_resize,!1),on_resize(),window.requestAnimationFrame(update);